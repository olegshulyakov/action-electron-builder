name: Test

on:
  push:
    paths-ignore:
      - "/*.sh"
      - "/.*"
      - "/_*"
      - "**.txt"
      - "**.adoc"
      - "**.md"
      - ".github/workflows/*.yml"
      - "!.github/workflows/test.yml"
  pull_request:
    paths-ignore:
      - "/*.sh"
      - "/.*"
      - "/_*"
      - "**.txt"
      - "**.adoc"
      - "**.md"

jobs:
  test:
    name: Test ${{ matrix.package_manager }} on ${{ matrix.os }} NodeJS ${{ matrix.node_version }} - ${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node_version:
          - current
          - latest
        architecture:
          - x64
          - arm64
        package_manager:
          - npm
          - yarn
          - pnpm
        package_root: ["./test/app-in-root/", "./test/app-in-subdirectory/"]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.architecture }}
          cache: ${{ matrix.package_manager }}

      - name: Install package manager
        if: ${{ matrix.package_manager != 'npm' }}
        run: npm install -g ${{ matrix.package_manager }}

      - name: Install test app dependencies
        run: |
          cd ${{ matrix.package_root }}
          ${{ matrix.package_manager }} install

      - name: Make sure PYTHON_ENV is set for npm in macos
        if: ${{ startsWith(matrix.os, 'macos-') && matrix.package_manager == 'npm' }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: ${{ matrix.architecture }}

      - name: Make more sure PYTHON_ENV is set for npm in macos
        if: ${{ startsWith(matrix.os, 'macos-') && matrix.package_manager == 'npm' }}
        run: |
          command -v python || :
          command -v python3 || :
          echo "PYTHON_ENV=$(command -v python)" >> $GITHUB_OUTPUT

      - name: Run action
        uses: ./
        with:
          package_manager: ${{ matrix.package_manager }}
          github_token: ${{ secrets.github_token }}
          package_root: ${{ matrix.package_root }}
          use_vue_cli: ${{ contains(matrix.package_root, 'vue')}}
          max_attempts: "2"
